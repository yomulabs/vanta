!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports._vantaEffect=e():t._vantaEffect=e()}("undefined"!=typeof self?self:this,(()=>(()=>{"use strict";var t={d:(e,i)=>{for(var n in i)t.o(i,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:i[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};function i(){return"undefined"!=typeof navigator?/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<600:null}t.r(e),t.d(e,{default:()=>b}),Number.prototype.clamp=function(t,e){return Math.min(Math.max(this,t),e)};function n(t){for(;t.children&&t.children.length>0;)n(t.children[0]),t.remove(t.children[0]);t.geometry&&t.geometry.dispose(),t.material&&(Object.keys(t.material).forEach((e=>{t.material[e]&&null!==t.material[e]&&"function"==typeof t.material[e].dispose&&t.material[e].dispose()})),t.material.dispose())}const o="object"==typeof window;let s=o&&window.THREE||{};o&&!window.VANTA&&(window.VANTA={});const r=o&&window.VANTA||{};r.register=(t,e)=>r[t]=t=>new e(t),r.version="0.5.24";const a=function(){return Array.prototype.unshift.call(arguments,"[VANTA]"),console.error.apply(this,arguments)};r.VantaBase=class{constructor(t={}){if(!o)return!1;r.current=this,this.windowMouseMoveWrapper=this.windowMouseMoveWrapper.bind(this),this.windowTouchWrapper=this.windowTouchWrapper.bind(this),this.windowGyroWrapper=this.windowGyroWrapper.bind(this),this.resize=this.resize.bind(this),this.animationLoop=this.animationLoop.bind(this),this.restart=this.restart.bind(this);const e="function"==typeof this.getDefaultOptions?this.getDefaultOptions():this.defaultOptions;if(this.options=Object.assign({mouseControls:!0,touchControls:!0,gyroControls:!1,minHeight:200,minWidth:200,scale:1,scaleMobile:1},e),(t instanceof HTMLElement||"string"==typeof t)&&(t={el:t}),Object.assign(this.options,t),this.options.THREE&&(s=this.options.THREE),this.el=this.options.el,null==this.el)a('Instance needs "el" param!');else if(!(this.options.el instanceof HTMLElement)){const t=this.el;if(this.el=(i=t,document.querySelector(i)),!this.el)return void a("Cannot find element",t)}var i,n;this.prepareEl(),this.initThree(),this.setSize();try{this.init()}catch(t){return a("Init error",t),this.renderer&&this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),void(this.options.backgroundColor&&(console.log("[VANTA] Falling back to backgroundColor"),this.el.style.background=(n=this.options.backgroundColor,"number"==typeof n?"#"+("00000"+n.toString(16)).slice(-6):n)))}this.initMouse(),this.resize(),this.animationLoop();const l=window.addEventListener;this.options.mouseControls&&(l("scroll",this.windowMouseMoveWrapper),l("mousemove",this.windowMouseMoveWrapper)),this.options.touchControls&&(l("touchstart",this.windowTouchWrapper),l("touchmove",this.windowTouchWrapper)),this.options.gyroControls&&l("deviceorientation",this.windowGyroWrapper)}setOptions(t={}){Object.assign(this.options,t),this.triggerMouseMove()}prepareEl(){let t,e;if("undefined"!=typeof Node&&Node.TEXT_NODE)for(t=0;t<this.el.childNodes.length;t++){const e=this.el.childNodes[t];if(e.nodeType===Node.TEXT_NODE){const t=document.createElement("span");t.textContent=e.textContent,e.parentElement.insertBefore(t,e),e.remove()}}for(t=0;t<this.el.children.length;t++)e=this.el.children[t],"static"===getComputedStyle(e).position&&(e.style.position="relative"),"auto"===getComputedStyle(e).zIndex&&(e.style.zIndex=1);"static"===getComputedStyle(this.el).position&&(this.el.style.position="relative")}applyCanvasStyles(t,e={}){Object.assign(t.style,{position:"absolute",zIndex:0,top:0,left:0,background:""}),this.options.pixelated&&(t.style.imageRendering="pixelated"),Object.assign(t.style,e),t.classList.add("vanta-canvas")}initThree(){s.WebGLRenderer?(this.renderer=new s.WebGLRenderer({alpha:!0,antialias:!0}),this.el.appendChild(this.renderer.domElement),this.applyCanvasStyles(this.renderer.domElement),isNaN(this.options.backgroundAlpha)&&(this.options.backgroundAlpha=1),this.scene=new s.Scene):console.warn("[VANTA] No THREE defined on window")}getCanvasElement(){return this.renderer?this.renderer.domElement:this.p5renderer?this.p5renderer.canvas:void 0}getCanvasRect(){const t=this.getCanvasElement();return!!t&&t.getBoundingClientRect()}windowMouseMoveWrapper(t){const e=this.getCanvasRect();if(!e)return!1;const i=t.clientX-e.left,n=t.clientY-e.top;i>=0&&n>=0&&i<=e.width&&n<=e.height&&(this.mouseX=i,this.mouseY=n,this.options.mouseEase||this.triggerMouseMove(i,n))}windowTouchWrapper(t){const e=this.getCanvasRect();if(!e)return!1;if(1===t.touches.length){const i=t.touches[0].clientX-e.left,n=t.touches[0].clientY-e.top;i>=0&&n>=0&&i<=e.width&&n<=e.height&&(this.mouseX=i,this.mouseY=n,this.options.mouseEase||this.triggerMouseMove(i,n))}}windowGyroWrapper(t){const e=this.getCanvasRect();if(!e)return!1;const i=Math.round(2*t.alpha)-e.left,n=Math.round(2*t.beta)-e.top;i>=0&&n>=0&&i<=e.width&&n<=e.height&&(this.mouseX=i,this.mouseY=n,this.options.mouseEase||this.triggerMouseMove(i,n))}triggerMouseMove(t,e){void 0===t&&void 0===e&&(this.options.mouseEase?(t=this.mouseEaseX,e=this.mouseEaseY):(t=this.mouseX,e=this.mouseY)),this.uniforms&&(this.uniforms.iMouse.value.x=t/this.scale,this.uniforms.iMouse.value.y=e/this.scale);const i=t/this.width,n=e/this.height;"function"==typeof this.onMouseMove&&this.onMouseMove(i,n)}setSize(){this.scale||(this.scale=1),i()&&this.options.scaleMobile?this.scale=this.options.scaleMobile:this.options.scale&&(this.scale=this.options.scale),this.width=Math.max(this.el.offsetWidth,this.options.minWidth),this.height=Math.max(this.el.offsetHeight,this.options.minHeight)}initMouse(){(!this.mouseX&&!this.mouseY||this.mouseX===this.options.minWidth/2&&this.mouseY===this.options.minHeight/2)&&(this.mouseX=this.width/2,this.mouseY=this.height/2,this.triggerMouseMove(this.mouseX,this.mouseY))}resize(){this.setSize(),this.camera&&(this.camera.aspect=this.width/this.height,"function"==typeof this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix()),this.renderer&&(this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio/this.scale)),"function"==typeof this.onResize&&this.onResize()}isOnScreen(){const t=this.el.offsetHeight,e=this.el.getBoundingClientRect(),i=window.pageYOffset||(document.documentElement||document.body.parentNode||document.body).scrollTop,n=e.top+i;return n-window.innerHeight<=i&&i<=n+t}animationLoop(){this.t||(this.t=0),this.t2||(this.t2=0);const t=performance.now();if(this.prevNow){let e=(t-this.prevNow)/(1e3/60);e=Math.max(.2,Math.min(e,5)),this.t+=e,this.t2+=(this.options.speed||1)*e,this.uniforms&&(this.uniforms.iTime.value=.016667*this.t2)}return this.prevNow=t,this.options.mouseEase&&(this.mouseEaseX=this.mouseEaseX||this.mouseX||0,this.mouseEaseY=this.mouseEaseY||this.mouseY||0,Math.abs(this.mouseEaseX-this.mouseX)+Math.abs(this.mouseEaseY-this.mouseY)>.1&&(this.mouseEaseX+=.05*(this.mouseX-this.mouseEaseX),this.mouseEaseY+=.05*(this.mouseY-this.mouseEaseY),this.triggerMouseMove(this.mouseEaseX,this.mouseEaseY))),(this.isOnScreen()||this.options.forceAnimate)&&("function"==typeof this.onUpdate&&this.onUpdate(),this.scene&&this.camera&&(this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(this.options.backgroundColor,this.options.backgroundAlpha)),this.fps&&this.fps.update&&this.fps.update(),"function"==typeof this.afterRender&&this.afterRender()),this.req=window.requestAnimationFrame(this.animationLoop)}restart(){if(this.scene)for(;this.scene.children.length;)this.scene.remove(this.scene.children[0]);"function"==typeof this.onRestart&&this.onRestart(),this.init()}init(){"function"==typeof this.onInit&&this.onInit()}destroy(){"function"==typeof this.onDestroy&&this.onDestroy();const t=window.removeEventListener;t("touchstart",this.windowTouchWrapper),t("touchmove",this.windowTouchWrapper),t("scroll",this.windowMouseMoveWrapper),t("mousemove",this.windowMouseMoveWrapper),t("deviceorientation",this.windowGyroWrapper),t("resize",this.resize),window.cancelAnimationFrame(this.req);const e=this.scene;e&&e.children&&n(e),this.renderer&&(this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),this.renderer=null,this.scene=null),r.current===this&&(r.current=null)}};const l=r.VantaBase;let h="object"==typeof window&&window.THREE;class d{constructor(t,e,i,n){n&&(h=n),this.variables=[],this.currentTextureIndex=0;let o=h.FloatType;const s=new h.Scene,r=new h.Camera;r.position.z=1;const a={passThruTexture:{value:null}},l=u("uniform sampler2D passThruTexture;\n\nvoid main() {\n\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\n\tgl_FragColor = texture2D( passThruTexture, uv );\n\n}\n",a),d=new h.Mesh(new h.PlaneGeometry(2,2),l);function c(i){i.defines.resolution="vec2( "+t.toFixed(1)+", "+e.toFixed(1)+" )"}function u(t,e){e=e||{};const i=new h.ShaderMaterial({uniforms:e,vertexShader:"void main()\t{\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n",fragmentShader:t});return c(i),i}s.add(d),this.setDataType=function(t){return o=t,this},this.addVariable=function(t,e,i){const n={name:t,initialValueTexture:i,material:this.createShaderMaterial(e),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:h.NearestFilter,magFilter:h.NearestFilter};return this.variables.push(n),n},this.setVariableDependencies=function(t,e){t.dependencies=e},this.init=function(){if(!1===i.capabilities.isWebGL2&&!1===i.extensions.has("OES_texture_float"))return"No OES_texture_float support for float textures.";if(0===i.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(let i=0;i<this.variables.length;i++){const n=this.variables[i];n.renderTargets[0]=this.createRenderTarget(t,e,n.wrapS,n.wrapT,n.minFilter,n.magFilter),n.renderTargets[1]=this.createRenderTarget(t,e,n.wrapS,n.wrapT,n.minFilter,n.magFilter),this.renderTexture(n.initialValueTexture,n.renderTargets[0]),this.renderTexture(n.initialValueTexture,n.renderTargets[1]);const o=n.material,s=o.uniforms;if(null!==n.dependencies)for(let t=0;t<n.dependencies.length;t++){const e=n.dependencies[t];if(e.name!==n.name){let t=!1;for(let i=0;i<this.variables.length;i++)if(e.name===this.variables[i].name){t=!0;break}if(!t)return"Variable dependency not found. Variable="+n.name+", dependency="+e.name}s[e.name]={value:null},o.fragmentShader="\nuniform sampler2D "+e.name+";\n"+o.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){const t=this.currentTextureIndex,e=0===this.currentTextureIndex?1:0;for(let i=0,n=this.variables.length;i<n;i++){const n=this.variables[i];if(null!==n.dependencies){const e=n.material.uniforms;for(let i=0,o=n.dependencies.length;i<o;i++){const o=n.dependencies[i];e[o.name].value=o.renderTargets[t].texture}}this.doRenderTarget(n.material,n.renderTargets[e])}this.currentTextureIndex=e},this.getCurrentRenderTarget=function(t){return t.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(t){return t.renderTargets[0===this.currentTextureIndex?1:0]},this.dispose=function(){d.geometry.dispose(),d.material.dispose();const t=this.variables;for(let e=0;e<t.length;e++){const i=t[e];i.initialValueTexture?.dispose();const n=i.renderTargets;for(let t=0;t<n.length;t++)n[t].dispose()}},this.addResolutionDefine=c,this.createShaderMaterial=u,this.createRenderTarget=function(i,n,s,r,a,l){return i=i||t,n=n||e,s=s||h.ClampToEdgeWrapping,r=r||h.ClampToEdgeWrapping,a=a||h.NearestFilter,l=l||h.NearestFilter,new h.WebGLRenderTarget(i,n,{wrapS:s,wrapT:r,minFilter:a,magFilter:l,format:h.RGBAFormat,type:o,depthBuffer:!1})},this.createTexture=function(){const i=new Float32Array(t*e*4),n=new h.DataTexture(i,t,e,h.RGBAFormat,h.FloatType);return n.needsUpdate=!0,n},this.renderTexture=function(t,e){a.passThruTexture.value=t,this.doRenderTarget(l,e),a.passThruTexture.value=null},this.doRenderTarget=function(t,e){const n=i.getRenderTarget(),o=i.xr.enabled,a=i.shadowMap.autoUpdate,c=i.outputEncoding,u=i.toneMapping;i.xr.enabled=!1,i.shadowMap.autoUpdate=!1,i.outputEncoding=h.LinearEncoding,i.toneMapping=h.NoToneMapping,d.material=t,i.setRenderTarget(e),i.render(s,r),d.material=l,i.xr.enabled=o,i.shadowMap.autoUpdate=a,i.outputEncoding=c,i.toneMapping=u,i.setRenderTarget(n)}}}h.GPUComputationRenderer=d;const c=d;let u="object"==typeof window&&window.THREE;const p=!i();let m=32,f=m*m;const v=800,y=(t={})=>{const e=new u.BufferGeometry,i=[];function n(e,n,o){const s=1.5*(t.birdSize||1);i.push(new u.Vector3(e*s,n*s,o*s))}n(5,0,0),n(-5,-1,1),n(-5,0,0),n(-5,-2,-1),n(0,2,-6),n(0,2,6),n(2,0,0),n(-3,0,0),e.setFromPoints(i);const o=[];return o.push(0,2,1),o.push(4,7,6),o.push(5,6,7),e.setIndex(o),e};class g{constructor(t){var e,i,n=new u.Vector3,o=500,s=500,r=200,a=.1,l=t;this.position=new u.Vector3,this.velocity=new u.Vector3,e=new u.Vector3,this.setGoal=function(t){i=t},this.setWorldSize=function(t,e,i){o=t,s=e,r=i},this.run=function(t){n.set(-o,this.position.y,this.position.z),(n=this.avoid(n)).multiplyScalar(5),e.add(n),n.set(o,this.position.y,this.position.z),(n=this.avoid(n)).multiplyScalar(5),e.add(n),n.set(this.position.x,-s,this.position.z),(n=this.avoid(n)).multiplyScalar(5),e.add(n),n.set(this.position.x,s,this.position.z),(n=this.avoid(n)).multiplyScalar(5),e.add(n),n.set(this.position.x,this.position.y,-r),(n=this.avoid(n)).multiplyScalar(5),e.add(n),n.set(this.position.x,this.position.y,r),(n=this.avoid(n)).multiplyScalar(5),e.add(n),Math.random()>.5&&this.flock(t),this.move()},this.flock=function(t){i&&e.add(this.reach(i,.005)),e.add(this.alignment(t)),e.add(this.cohesion(t)),e.add(this.separation(t))},this.move=function(){this.velocity.add(e);var t=this.velocity.length();t>2.5&&this.velocity.divideScalar(t/2.5),this.position.add(this.velocity),e.set(0,0,0)},this.checkBounds=function(){this.position.x>o&&(this.position.x=-o),this.position.x<-o&&(this.position.x=o),this.position.y>s&&(this.position.y=-s),this.position.y<-s&&(this.position.y=s),this.position.z>r&&(this.position.z=-r),this.position.z<-r&&(this.position.z=r)},this.avoid=function(t){var e=new u.Vector3;return e.copy(this.position),e.sub(t),e.multiplyScalar(1/this.position.distanceToSquared(t)),e},this.repulse=function(t){var i=this.position.distanceTo(t);if(i<150){var n=new u.Vector3;n.subVectors(this.position,t),n.multiplyScalar(.5/i),e.add(n)}},this.reach=function(t,e){var i=new u.Vector3;return i.subVectors(t,this.position),i.multiplyScalar(e),i},this.alignment=function(t){var e,i,n=new u.Vector3,o=0;const s=100*l.alignment/20;for(var r=0,h=t.length;r<h;r++)Math.random()>.6||(i=(e=t[r]).position.distanceTo(this.position))>0&&i<=s&&(n.add(e.velocity),o++);if(o>0){n.divideScalar(o);var d=n.length();d>a&&n.divideScalar(d/a)}return n},this.cohesion=function(t){var e,i,n=new u.Vector3,o=new u.Vector3,s=0;const r=100*l.cohesion/20;for(var h=0,d=t.length;h<d;h++)Math.random()>.6||(i=(e=t[h]).position.distanceTo(this.position))>0&&i<=r&&(n.add(e.position),s++);s>0&&n.divideScalar(s),o.subVectors(n,this.position);var c=o.length();return c>a&&o.divideScalar(c/a),o},this.separation=function(t){var e,i,n=new u.Vector3,o=new u.Vector3;const s=100*l.separation/20;for(var r=0,a=t.length;r<a;r++)Math.random()>.6||(i=(e=t[r]).position.distanceTo(this.position))>0&&i<=s&&(o.subVectors(this.position,e.position),o.normalize(),o.divideScalar(i),n.add(o));return n}}}class w extends l{static initClass(){this.prototype.defaultOptions={backgroundColor:465199,color1:16711680,color2:53759,colorMode:"varianceGradient",birdSize:1,wingSpan:30,speedLimit:5,separation:20,alignment:20,cohesion:20,quantity:5}}constructor(t){u=t.THREE||u,super(t)}initComputeRenderer(){this.gpuCompute=new c(m,m,this.renderer,u),!1===this.renderer.capabilities.isWebGL2&&gpuCompute.setDataType(u.HalfFloatType);const t=this.gpuCompute.createTexture(),e=this.gpuCompute.createTexture();!function(t){const e=t.image.data;let i=0;const n=e.length;(()=>{const t=[];for(;i<n;){const n=Math.random()*v-400,o=Math.random()*v-400,s=Math.random()*v-400;e[i+0]=n,e[i+1]=o,e[i+2]=s,e[i+3]=1,t.push(i+=4)}})()}(t),function(t){const e=t.image.data;let i=0;const n=e.length;(()=>{const t=[];for(;i<n;){const n=Math.random()-.5,o=Math.random()-.5,s=Math.random()-.5;e[i+0]=10*n,e[i+1]=10*o,e[i+2]=10*s,e[i+3]=1,t.push(i+=4)}})()}(e),this.velocityVariable=this.gpuCompute.addVariable("textureVelocity","uniform float time;\nuniform float testing;\nuniform float delta; // about 0.016\nuniform float separationDistance; // 20\nuniform float alignmentDistance; // 40\nuniform float cohesionDistance;\nuniform float speedLimit;\nuniform float freedomFactor;\nuniform vec3 predator;\n\nconst float width = resolution.x;\nconst float height = resolution.y;\n\nconst float PI = 3.141592653589793;\nconst float PI_2 = PI * 2.0;\n// const float VISION = PI * 0.55;\n\nfloat zoneRadius = 40.0;\nfloat zoneRadiusSquared = 1600.0;\n\nfloat separationThresh = 0.45;\nfloat alignmentThresh = 0.65;\n\nconst float UPPER_BOUNDS = BOUNDS;\nconst float LOWER_BOUNDS = -UPPER_BOUNDS;\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n\n  zoneRadius = separationDistance + alignmentDistance + cohesionDistance;\n  separationThresh = separationDistance / zoneRadius;\n  alignmentThresh = ( separationDistance + alignmentDistance ) / zoneRadius;\n  zoneRadiusSquared = zoneRadius * zoneRadius;\n\n\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\n  vec3 birdPosition, birdVelocity;\n\n  vec3 selfPosition = texture2D( texturePosition, uv ).xyz;\n  vec3 selfVelocity = texture2D( textureVelocity, uv ).xyz;\n\n  float dist;\n  vec3 dir; // direction\n  float distSquared;\n\n  float separationSquared = separationDistance * separationDistance;\n  float cohesionSquared = cohesionDistance * cohesionDistance;\n\n  float f;\n  float percent;\n\n  vec3 velocity = selfVelocity;\n\n  float limit = speedLimit;\n\n  dir = predator * UPPER_BOUNDS - selfPosition;\n  dir.z = 0.;\n  // dir.z *= 0.6;\n  dist = length( dir );\n  distSquared = dist * dist;\n\n  float preyRadius = 150.0;\n  float preyRadiusSq = preyRadius * preyRadius;\n\n  // move birds away from predator\n  if (dist < preyRadius) {\n\n    f = ( distSquared / preyRadiusSq - 1.0 ) * delta * 100.;\n    velocity += normalize( dir ) * f;\n    limit += 5.0;\n  }\n\n  // if (testing == 0.0) {}\n  // if ( rand( uv + time ) < freedomFactor ) {}\n\n  // Attract flocks to the center\n  vec3 central = vec3( 0., 0., 0. );\n  dir = selfPosition - central;\n  dist = length( dir );\n\n  dir.y *= 2.5;\n  velocity -= normalize( dir ) * delta * 5.;\n\n  for (float y=0.0;y<height;y++) {\n    for (float x=0.0;x<width;x++) {\n\n      vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;\n      birdPosition = texture2D( texturePosition, ref ).xyz;\n\n      dir = birdPosition - selfPosition;\n      dist = length(dir);\n\n      if (dist < 0.0001) continue;\n\n      distSquared = dist * dist;\n\n      if (distSquared > zoneRadiusSquared ) continue;\n\n      percent = distSquared / zoneRadiusSquared;\n\n      if ( percent < separationThresh ) { // low\n\n        // Separation - Move apart for comfort\n        f = (separationThresh / percent - 1.0) * delta;\n        velocity -= normalize(dir) * f;\n\n      } else if ( percent < alignmentThresh ) { // high\n\n        // Alignment - fly the same direction\n        float threshDelta = alignmentThresh - separationThresh;\n        float adjustedPercent = ( percent - separationThresh ) / threshDelta;\n\n        birdVelocity = texture2D( textureVelocity, ref ).xyz;\n\n        f = ( 0.5 - cos( adjustedPercent * PI_2 ) * 0.5 + 0.5 ) * delta;\n        velocity += normalize(birdVelocity) * f;\n\n      } else {\n\n        // Attraction / Cohesion - move closer\n        float threshDelta = 1.0 - alignmentThresh;\n        float adjustedPercent = ( percent - alignmentThresh ) / threshDelta;\n\n        f = ( 0.5 - ( cos( adjustedPercent * PI_2 ) * -0.5 + 0.5 ) ) * delta;\n\n        velocity += normalize(dir) * f;\n\n      }\n    }\n  }\n\n  // this make tends to fly around than down or up\n  // if (velocity.y > 0.) velocity.y *= (1. - 0.2 * delta);\n\n  // Speed Limits\n  if ( length( velocity ) > limit ) {\n    velocity = normalize( velocity ) * limit;\n  }\n\n  gl_FragColor = vec4( velocity, 1.0 );\n\n}",e),this.positionVariable=this.gpuCompute.addVariable("texturePosition","uniform float time;\nuniform float delta;\n\nvoid main() {\n\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\n  vec4 tmpPos = texture2D( texturePosition, uv );\n  vec3 position = tmpPos.xyz;\n  vec3 velocity = texture2D( textureVelocity, uv ).xyz;\n\n  float phase = tmpPos.w;\n\n  phase = mod( ( phase + delta +\n    length( velocity.xz ) * delta * 3. +\n    max( velocity.y, 0.0 ) * delta * 6. ), 62.83 );\n\n  gl_FragColor = vec4( position + velocity * delta * 15. , phase );\n\n}",t),this.gpuCompute.setVariableDependencies(this.velocityVariable,[this.positionVariable,this.velocityVariable]),this.gpuCompute.setVariableDependencies(this.positionVariable,[this.positionVariable,this.velocityVariable]),this.positionUniforms=this.positionVariable.material.uniforms,this.velocityUniforms=this.velocityVariable.material.uniforms,this.positionUniforms.time={value:0},this.positionUniforms.delta={value:0},this.velocityUniforms.time={value:1},this.velocityUniforms.delta={value:0},this.velocityUniforms.testing={value:1},this.velocityUniforms.separationDistance={value:1},this.velocityUniforms.alignmentDistance={value:1},this.velocityUniforms.cohesionDistance={value:1},this.velocityUniforms.speedLimit={value:1},this.velocityUniforms.freedomFactor={value:1},this.velocityUniforms.predator={value:new u.Vector3},this.velocityVariable.material.defines.BOUNDS=v.toFixed(2),this.velocityVariable.wrapS=u.RepeatWrapping,this.velocityVariable.wrapT=u.RepeatWrapping,this.positionVariable.wrapS=u.RepeatWrapping,this.positionVariable.wrapT=u.RepeatWrapping;const i=this.gpuCompute.init();null!==i&&console.error(i)}initGpgpuBirds(){const t=(t=>{const e=new u.BufferGeometry;t.quantity&&(m=Math.pow(2,t.quantity),f=m*m);const i=3*f,n=3*i,o=new u.BufferAttribute(new Float32Array(3*n),3),s=new u.BufferAttribute(new Float32Array(3*n),3),r=new u.BufferAttribute(new Float32Array(2*n),2),a=new u.BufferAttribute(new Float32Array(n),1);e.setAttribute||(e.setAttribute=e.addAttribute),e.setAttribute("position",o),e.setAttribute("birdColor",s),e.setAttribute("reference",r),e.setAttribute("birdVertex",a);let l=0;const h=function(){for(let t=0;t<arguments.length;t++)o.array[l++]=arguments[t]},d=t.wingSpan||20,c=t.birdSize||1;for(let t=0;t<f;t++)h(0,-0,-20*c,0,4*c,-20*c,0,0,30*c),h(0,0,-15*c,-d*c,0,0,0,0,15*c),h(0,0,15*c,d*c,0,0,0,0,-15*c);const p={};for(l=0;l<3*i;l++){const e=~~(~~(l/3)/3),i=e%m/m,n=~~(e/m)/m,o=~~(l/9)/f,h=o.toString(),d=-1!=t.colorMode.indexOf("Gradient");let c;c=!d&&p[h]?p[h]:t.effect.getNewCol(o),d||p[h]||(p[h]=c),s.array[3*l+0]=c.r,s.array[3*l+1]=c.g,s.array[3*l+2]=c.b,r.array[2*l]=i,r.array[2*l+1]=n,a.array[l]=l%9}return e.scale(.2,.2,.2)})(Object.assign({},this.options,{effect:this}));this.birdUniforms={color:{value:new u.Color(16720384)},texturePosition:{value:null},textureVelocity:{value:null},time:{value:1},delta:{value:0},birdSize:{value:this.options.birdSize}};const e=new u.ShaderMaterial({uniforms:this.birdUniforms,vertexShader:"attribute vec2 reference;\nattribute float birdVertex;\n\nattribute vec3 birdColor;\n\nuniform sampler2D texturePosition;\nuniform sampler2D textureVelocity;\n\nvarying vec4 vColor;\nvarying float z;\n\nuniform float time;\nuniform float birdSize;\n\nvoid main() {\n\n  vec4 tmpPos = texture2D( texturePosition, reference );\n  vec3 pos = tmpPos.xyz;\n  vec3 velocity = normalize(texture2D( textureVelocity, reference ).xyz);\n\n  vec3 newPosition = position;\n\n  if ( birdVertex == 4.0 || birdVertex == 7.0 ) {\n    // flap wings\n    newPosition.y = sin( tmpPos.w ) * 5. * birdSize;\n  }\n\n  newPosition = mat3( modelMatrix ) * newPosition;\n\n  velocity.z *= -1.;\n  float xz = length( velocity.xz );\n  float xyz = 1.;\n  float x = sqrt( 1. - velocity.y * velocity.y );\n\n  float cosry = velocity.x / xz;\n  float sinry = velocity.z / xz;\n\n  float cosrz = x / xyz;\n  float sinrz = velocity.y / xyz;\n\n  mat3 maty =  mat3(\n    cosry, 0, -sinry,\n    0    , 1, 0     ,\n    sinry, 0, cosry\n  );\n\n  mat3 matz =  mat3(\n    cosrz , sinrz, 0,\n    -sinrz, cosrz, 0,\n    0     , 0    , 1\n  );\n  newPosition =  maty * matz * newPosition;\n  newPosition += pos;\n  z = newPosition.z;\n\n  vColor = vec4( birdColor, 1.0 );\n  gl_Position = projectionMatrix *  viewMatrix  * vec4( newPosition, 1.0 );\n}",fragmentShader:"varying vec4 vColor;\nvarying float z;\nuniform vec3 color;\nvoid main() {\n  // Fake colors for now\n  float rr = 0.2 + ( 1000. - z ) / 1000. * vColor.x;\n  float gg = 0.2 + ( 1000. - z ) / 1000. * vColor.y;\n  float bb = 0.2 + ( 1000. - z ) / 1000. * vColor.z;\n  gl_FragColor = vec4( rr, gg, bb, 1. );\n}",side:u.DoubleSide}),i=new u.Mesh(t,e);return i.rotation.y=Math.PI/2,i.matrixAutoUpdate=!1,i.updateMatrix(),this.scene.add(i)}getNewCol(t){const e=this.options,i=null!=e.color1?e.color1:4456448,n=null!=e.color2?e.color2:6684672,o=new u.Color(i),s=new u.Color(n);let r,a;if(a=-1!=e.colorMode.indexOf("Gradient")?Math.random():t,0==e.colorMode.indexOf("variance")){const t=(o.r+Math.random()*s.r).clamp(0,1),e=(o.g+Math.random()*s.g).clamp(0,1),i=(o.b+Math.random()*s.b).clamp(0,1);r=new u.Color(t,e,i)}else r=0==e.colorMode.indexOf("mix")?new u.Color(i+a*n):o.lerp(s,a);return r}onInit(){this.camera=new u.PerspectiveCamera(75,this.width/this.height,1,3e3),this.camera.position.z=350,this.fog=new u.Fog(16777215,100,1e3),this.mouseX=this.mouseY=0;const t=this.birds=[],e=this.boids=[],i=this.options;let n,o;if(p)try{this.initComputeRenderer(),this.valuesChanger=this.valuesChanger.bind(this),this.valuesChanger(),this.initGpgpuBirds()}catch(t){console.error("[vanta.js] birds init error: ",t)}else{const l=6*Math.pow(2,i.quantity);for(var s=0;s<l;s++){n=e[s]=new g(i),n.position.x=400*Math.random()-200,n.position.y=400*Math.random()-200,n.position.z=400*Math.random()-200,n.velocity.x=2*Math.random()-1,n.velocity.y=2*Math.random()-1,n.velocity.z=2*Math.random()-1,n.setWorldSize(500,500,300);const h=-1!=i.colorMode.indexOf("Gradient"),d=y(i),c=d.attributes.position.length,p=new u.BufferAttribute(new Float32Array(c),3);if(h)for(var r=0;r<d.index.array.length;r+=3)for(var a=0;a<=2;a++){const t=d.index.array[r+a],e=this.getNewCol();p.array[3*t]=e.r,p.array[3*t+1]=e.g,p.array[3*t+2]=e.b}else{const t=this.getNewCol(s/l);for(r=0;r<p.array.length;r+=3)p.array[r]=t.r,p.array[r+1]=t.g,p.array[r+2]=t.b}d.setAttribute("color",p),o=t[s]=new u.Mesh(d,new u.MeshBasicMaterial({color:16777215,side:u.DoubleSide,vertexColors:u.VertexColors})),o.phase=Math.floor(62.83*Math.random()),o.position.x=e[s].position.x,o.position.y=e[s].position.y,o.position.z=e[s].position.z,this.scene.add(o)}}}valuesChanger(){this.velocityUniforms&&(this.velocityUniforms.separationDistance.value=this.options.separation,this.velocityUniforms.alignmentDistance.value=this.options.alignment,this.velocityUniforms.speedLimit.value=this.options.speedLimit,this.velocityUniforms.cohesionDistance.value=this.options.cohesion)}onUpdate(){this.now=performance.now(),this.last||(this.last=this.now);let t=(this.now-this.last)/1e3;if(t>1&&(t=1),this.last=this.now,p)this.positionUniforms.time.value=this.now,this.positionUniforms.delta.value=t,this.velocityUniforms.time.value=this.now,this.velocityUniforms.delta.value=t,this.birdUniforms.time.value=this.now,this.birdUniforms.delta.value=t,this.velocityUniforms.predator.value.set(this.mouseX,-this.mouseY,0),this.mouseX=1e4,this.mouseY=1e4,this.gpuCompute.compute(),this.birdUniforms.texturePosition.value=this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture,this.birdUniforms.textureVelocity.value=this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;else{const t=this.birds,n=this.boids;let o,s;for(var e=0,i=t.length;e<i;e++){o=n[e],o.run(n),s=t[e],s.rotation.y=Math.atan2(-o.velocity.z,o.velocity.x),s.rotation.z=Math.asin(o.velocity.y/o.velocity.length()),s.phase=(s.phase+(Math.max(0,s.rotation.z)+.1))%62.83;const i=16,r=13;s.geometry.attributes.position.array[i]=s.geometry.attributes.position.array[r]=5*Math.sin(s.phase)*this.options.birdSize,s.geometry.attributes.position.needsUpdate=!0,s.geometry.computeVertexNormals(),s.position.x=n[e].position.x,s.position.y=n[e].position.y,s.position.z=n[e].position.z}}}onMouseMove(t,e){if(this.mouseX=t-.5,this.mouseY=e-.5,!p){const t=this.boids;let e;for(var i=new u.Vector3(this.mouseX*this.width,-this.mouseY*this.height,0),n=0,o=t.length;n<o;n++)e=t[n],i.z=e.position.z,e.repulse(i)}}onDestroy(){}onResize(){}}w.initClass(),r.register("BIRDS",w);const b=r;return e})()));